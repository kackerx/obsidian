{
	"nodes":[
		{"type":"text","text":"## 定义\n- <mark class=\"hltr-pink\">超键</mark>: 能唯一标识元组的属性集合\n\t- 包含编号或身份号的任意组合, 如(编号), (编号, 姓名), (身份证, 年龄)\n \n- <mark class=\"hltr-pink\">候选键</mark>: 超键不包含多余的属性, 就是候选键\n\t- 如(编号), (身份证)\n \n- <mark class=\"hltr-pink\">主键</mark>: 可从候选键中选一个主键\n\t- 自定义候选键(编号)\n \n- <mark class=\"hltr-pink\">主属性</mark>: 包含在任一个候选键中的属性\n\t- (编号), (身份证)\n \n- <mark class=\"hltr-pink\">非主属性</mark>: 不包含在任一个候选键中的属性\n\t- 除属性外\n \n- <mark class=\"hltr-pink\">外键</mark>: 引用外表\n\n\n```ad-tip\n- 球员表定义为包含球员编号、姓名、身份证号、年龄和球队编号\n- 球队表包含球队编号、主教练和球队所在地\n```","id":"8cef98470afc8619","x":-620,"y":-380,"width":691,"height":520},
		{"type":"text","text":"## 范式\n- 1NF: 字段原子不可再分\n\n- 2NF: 非主属性完全依赖于候选键\n\t- 非主属性比赛时间等依赖了部分主键比赛编号\n\t- 当然, 单一主键的话, 一定是满足第二范式\n```ad-note\n候选键(球员编号, 比赛编号) → (姓名, 年龄, 比赛时间, 比赛场地，得分)\n```\n\n- 3NF: 非主属性不存在传递依赖于候选键\n\t- 球队教练 -> 球队编号 -> 球员编号, 传递依赖了, 解决拆球队表(球队编号, 球队教练) \n\n```ad-note\n(球员编号) -> (球员姓名, 球队编号, 球队教练)\n```\n\n- 所谓一对多: 一表的一条记录的id, 对应多表里多条的外键, 1(order.code) --> 多(row.order_code)\n\n\n","id":"ca5e298c28f9ee6a","x":140,"y":-380,"width":840,"height":520}
	],
	"edges":[]
}