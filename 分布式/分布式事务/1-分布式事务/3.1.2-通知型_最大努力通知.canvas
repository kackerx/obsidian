{
	"nodes":[
		{"type":"text","text":"## 最大努力通知\n```ad-tips\n主要用于对接不可控的外部系统, \n```","id":"8df64df9c0234f64","x":-449,"y":-312,"width":429,"height":212,"color":"6"},
		{"type":"text","text":"## 事务消息\n![[Pasted image 20230331164629.png]]\n- 业务主动方可以设置<mark class=\"hltr-pink\">时间阶梯通知规则</mark>, 调用第三方失败后按规则重复通知, 知道N次后不再通知, 人工介入\n- 主动方提供<mark class=\"hltr-pink\">校对查询接口</mark>, 给被动方按需查询, 恢复丢失的业务消息\n- 业务被动方正常处理, 响应, 结束\n- 业务被动方未正常接收, 按定时策略向主动方查询, 恢复丢失的业务消息","id":"6fdff723788f2e2c","x":40,"y":-312,"width":920,"height":512},
		{"type":"text","text":"## 本地消息表\n![[Pasted image 20230331165103.png]]\n- msg表记录消息处理的结果\n- 被调用方无法提供职责, 主动方要保证回滚策略","id":"be03400577fba727","x":40,"y":240,"width":920,"height":640,"color":"4"},
		{"type":"text","text":"## 本地消息表two\n![[Pasted image 20230331165747.png]]\n![[Pasted image 20230331165800.png]]\n- 订单系统入库且写入消息表(正在处理), 本地事务\n- 订单系统启动定时任务每分钟向库存系统发送正在处理订单消息\n- 库存系统处理完毕通知回调, 订单系统修改消息表为处理完毕\n- 中间各种失败都是重发, 保证接口的幂等性\n- 被调用方无法提供职责, 主动方要保证回滚策略","id":"af4aa8dc797f3a12","x":-860,"y":-56,"width":840,"height":936,"color":"4"},
		{"id":"37793d9a43f94d35","x":-860,"y":920,"width":930,"height":212,"type":"text","text":"- 在本地数据库中创建一个事件表，用来记录需要调用企业微信的机器人群推送接口的事件，包括事件的 ID、内容、状态等信息。\n- 在本地数据库中执行写入操作，并同时在事件表中插入一条待发送的事件记录，这两个操作可以在一个本地事务中完成，保证本地数据的一致性。\n- 在另一个线程或进程中，定期扫描事件表中的待发送的事件记录，并向企业微信的机器人群推送接口发送请求，如果发送成功，则更新事件表中的事件状态为已发送，如果发送失败，则重试或记录异常。\n- 在另一个线程或进程中，定期扫描事件表中的已发送的事件记录，并向企业微信的机器人群推送接口查询消息的发送结果，如果发送成功，则删除事件表中的事件记录，如果发送失败，则重试或记录异常。"}
	],
	"edges":[]
}