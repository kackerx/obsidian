{
	"nodes":[
		{"type":"text","text":"### 互动 -> 工厂, 仓库, 领域服务&应用服务\n\n- 领域服务: <mark class=\"hltr-pink\">动词</mark>, 动词可以放在领域对象或者值对象上, 但是有些动作是不属于对象的, 如两个对象的转账的动作等, 其产生的结果是领域事件\n- 工厂: 如创建对象的动作等\n- 仓库: 对数据的crud的动作\n- 应用服务: 业务无关的鉴权, 身份验证, 日志监控等","id":"67f9594a26bd9216","x":-350,"y":-160,"width":580,"height":190},
		{"type":"text","text":"### 关系 -> 聚合 & 聚合根\n- 聚合: 多个实体或者值对象的组合, 共同的生命周期, 如一个订单头和所属订单行, 是同一单元\n- 聚合根: 访问聚合的起点, 订单为例, 订单头就是聚合根\n![[Pasted image 20230305125706.png|555]]\n","id":"cf7a519df56c1da4","x":-1115,"y":-160,"width":635,"height":499},
		{"type":"text","text":"战术设计","id":"bb86e52c66894168","x":-475,"y":-300,"width":120,"height":60},
		{"type":"file","file":"架构设计/1-book/软件设计之美/限界上下文.md","id":"5fee025fd9f18c3a","x":-2080,"y":90,"width":844,"height":578},
		{"type":"text","text":"### 领域 & 子域 & 核心域 & 支撑域 & 通用域\n- 领域: 要解决的问题\n- 子域: 领域的划分, 如身份管理模块和相互管理模块, 都用到用户, 所以如何划分子域很重要\n- 核心域: 本系统非写不可的理由, 且不能外包的部分\n- 支撑域: 非核心, 但不得不做且市面无现成方案, 如排行榜, 人家的我们不能用, 但需要定制符合我们的, 可以外包的\n- 通用域: 无需自己做, 市面现成方案, 可以买来运行不影响业务, 如app注册信息发送服务","id":"a5311cde2c2f5fb4","x":-1800,"y":-514,"width":685,"height":274},
		{"type":"text","text":"### 角色 -> 实体(entity) & 值对象(valueObj)\n- 实体: 唯一能标识出来的对象, 比如一个订单, 属性可变, 状态属性怎么变都还是那个k实体\n- 值对象: 表示一个值, 如订单地址, 无法标识, 属性全部相同就是同一个值对象, 但是entity的话属性完全一个, id不同也是不同的实体","id":"8e8afd3a3faf099e","x":-587,"y":-601,"width":474,"height":174},
		{"type":"text","text":"战略设计","id":"5205f224e165095e","x":-1800,"y":-65,"width":120,"height":60}
	],
	"edges":[
		{"id":"ef0839ec6c1846fe","fromNode":"bb86e52c66894168","fromSide":"top","toNode":"8e8afd3a3faf099e","toSide":"bottom"},
		{"id":"0d2b013c2cae16aa","fromNode":"bb86e52c66894168","fromSide":"bottom","toNode":"cf7a519df56c1da4","toSide":"top"},
		{"id":"c5075206af7f31e6","fromNode":"bb86e52c66894168","fromSide":"bottom","toNode":"67f9594a26bd9216","toSide":"top"},
		{"id":"af9243b6c0be8970","fromNode":"5205f224e165095e","fromSide":"top","toNode":"a5311cde2c2f5fb4","toSide":"bottom"}
	]
}